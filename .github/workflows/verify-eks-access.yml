name: Verify EKS Access

on:
  push:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to verify (dev or prod)'
        required: true
        default: 'prod'
        type: choice
        options:
        - dev
        - prod

jobs:
  verify-eks-access:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'prod' }}
    
    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::234139188789:role/DE000079-${{ github.event.inputs.environment || 'prod' }}-terraform-admin
        aws-region: ap-southeast-2
        role-session-name: GitHubActions-VerifyEKSAccess

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.12.2

    - name: Initialize Terraform
      working-directory: environments/${{ github.event.inputs.environment || 'prod' }}
      run: terraform init

    - name: Check Terraform State for aws-auth
      working-directory: environments/${{ github.event.inputs.environment || 'prod' }}
      run: |
        echo "=== Checking terraform state for aws-auth resources ==="
        terraform state list | grep aws_auth || echo "No aws-auth resources found in terraform state"
        
        echo "=== Checking if aws-auth files exist ==="
        ls -la ../../modules/eks/aws-auth-*.yaml || echo "No aws-auth files found"

    - name: Setup kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.28.0'

    - name: Update kubeconfig and verify aws-auth ConfigMap
      run: |
        echo "=== Updating kubeconfig ==="
        aws eks update-kubeconfig --region ap-southeast-2 --name DE000079-eks-${{ github.event.inputs.environment || 'prod' }}
        
        echo "=== Checking kubectl connection ==="
        kubectl auth can-i get configmaps -n kube-system || echo "Cannot access configmaps"
        
        echo "=== Attempting to get aws-auth ConfigMap ==="
        kubectl get configmap aws-auth -n kube-system -o yaml || echo "aws-auth ConfigMap not found or access denied"
        
        echo "=== Listing all ConfigMaps in kube-system ==="
        kubectl get configmaps -n kube-system || echo "Cannot list configmaps"

    - name: Check EKS cluster info
      run: |
        echo "=== EKS cluster info ==="
        aws eks describe-cluster --name DE000079-eks-${{ github.event.inputs.environment || 'prod' }} --region ap-southeast-2 --query 'cluster.{Name:name,Status:status,Version:version,Endpoint:endpoint}'
