# Example GitHub Actions workflow for application deployment to EKS
# Place this in .github/workflows/deploy-app.yml in your application repository

name: Deploy Application to EKS

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  AWS_REGION: ap-southeast-2
  EKS_CLUSTER_NAME_DEV: DE000079-eks-dev
  EKS_CLUSTER_NAME_PROD: DE000079-eks-prod

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Configure AWS credentials for Dev
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.GITHUB_ACTIONS_DEPLOY_ROLE_ARN_DEV }}
        role-session-name: github-actions-deploy-dev
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Update kubeconfig for Dev
      run: |
        aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER_NAME_DEV }}
    
    - name: Deploy to Dev EKS
      run: |
        # Example deployment commands
        echo "Deploying to Dev environment..."
        
        # Create namespace if it doesn't exist
        kubectl create namespace ecommerce-vti-dev --dry-run=client -o yaml | kubectl apply -f -
        
        # Apply your application manifests
        # kubectl apply -f k8s/dev/ -n ecommerce-vti-dev
        
        # Example: Deploy a simple nginx
        kubectl create deployment nginx-test --image=nginx --namespace=ecommerce-vti-dev --dry-run=client -o yaml | kubectl apply -f -
        kubectl expose deployment nginx-test --port=80 --namespace=ecommerce-vti-dev --dry-run=client -o yaml | kubectl apply -f -
        
        # Check deployment status
        kubectl get pods -n ecommerce-vti-dev
        kubectl get services -n ecommerce-vti-dev

  deploy-prod:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: deploy-dev
    environment: production
    
    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Configure AWS credentials for Prod
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.GITHUB_ACTIONS_DEPLOY_ROLE_ARN_PROD }}
        role-session-name: github-actions-deploy-prod
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Update kubeconfig for Prod
      run: |
        aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER_NAME_PROD }}
    
    - name: Deploy to Prod EKS
      run: |
        # Example deployment commands
        echo "Deploying to Prod environment..."
        
        # Create namespace if it doesn't exist
        kubectl create namespace ecommerce-vti-prod --dry-run=client -o yaml | kubectl apply -f -
        
        # Apply your application manifests
        # kubectl apply -f k8s/prod/ -n ecommerce-vti-prod
        
        # Example: Deploy a simple nginx
        kubectl create deployment nginx-test --image=nginx --namespace=ecommerce-vti-prod --dry-run=client -o yaml | kubectl apply -f -
        kubectl expose deployment nginx-test --port=80 --namespace=ecommerce-vti-prod --dry-run=client -o yaml | kubectl apply -f -
        
        # Check deployment status
        kubectl get pods -n ecommerce-vti-prod
        kubectl get services -n ecommerce-vti-prod
